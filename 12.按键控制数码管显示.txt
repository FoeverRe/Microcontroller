/*-----------------------------------------------
  名称：按键控制单个数码管显示
  编写：10
  日期：2024.4.22
  修改：无
  内容：通过操控P3的按键来操控数码管显示的数字
------------------------------------------------*/
#include <REGX52.H>
// 定义共阴数码管的编码数组，用于显示0到F
unsigned char RE[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
                        0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71 };
// 延时函数，用于控制数码管的刷新速度
void Delay(unsigned int xms)		//@12.000MHz
{
    while (xms--) {
        unsigned char i, j;

        i = 2;
        j = 239;
        do
        {
            while (--j);
        } while (--i);
    }
}
// 控制数码管显示特定的字符或数字
void re(unsigned char Location, Number) {
    switch (Location)
    {
        // 根据Location值设置数码管的位置
    case 1: P2_4 = 1; P2_3 = 1; P2_2 = 1; break; // 第一个数码管
    case 2: P2_4 = 1; P2_3 = 1; P2_2 = 0; break; // 第二个数码管
    case 3: P2_4 = 1; P2_3 = 0; P2_2 = 1; break; // 第三个数码管
    case 4: P2_4 = 1; P2_3 = 0; P2_2 = 0; break; // 第四个数码管
    }
    // 在数码管上显示相应的数字
    P0 = RE[Number]; // 设置P0口的值为RE数组中对应的值
    Delay(20); // 延时20毫秒，以控制刷新速度
}
void main() {
    while (1)
    {
        // 检测P3_0按键是否按下，如果是则执行以下操作
        if (P3_0 == 0) {
            Delay(20); // 延时20毫秒，消除按键抖动
            // 等待按键释放
            while (P3_1 == 0);
            // 显示数字1，并设置数码管位置为第一个
            re(1, 1);
        }
        // 类似地，检测P3_1、P3_2、P3_3按键是否按下，并执行相应操作
        if (P3_1 == 0) {
            Delay(20);
            while (P3_1 == 0);
            re(2, 2);
        }
        if (P3_2 == 0) {
            Delay(20);
            while (P3_2 == 0);
            re(3, 3);
        }
        if (P3_3 == 0) {
            Delay(20);
            while (P3_3 == 0);
            re(4, 4);
        }
    }
}